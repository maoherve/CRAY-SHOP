{% block body %}

    {% if outfit | length > 0 %}
        <table class="table mt-5">
            <thead>
            <tr>
                <th>Produit</th>
                <th>Prix</th>
                <th>Quantité</th>
                <th>Total</th>
                <th> </th>
            </tr>
            </thead>
            <tbody>
            {% for item in outfit %}
                <tr>
                    <th>{{ item.outfit.description }}</th>
                    <th>{{ item.outfit.price }}€</th>
                    <th>{{ item.quantity }}</th>
                    <th>{{ item.outfit.price * item.quantity }}€</th>
                    <th><i class="fas fa-trash-alt">
                            <a href="{{ path('cart_remove', {'id': item.outfit.id}) }}" class="btn btn-danger">
                            </a>
                        </i>
                    </th>
                </tr>
            {% endfor %}
            </tbody>
            <tfoot>
            <tr>
                <td colspan="3" class="text-right">Total :</td>
                <td>{{ total }}€</td>
            </tr>
            </tfoot>
        </table>
        <form action="" method="post" id="payment-form">
                <label for="card-element">
                    Carte de crédit
                </label>
                <div id="card-element">
                    <!-- A Stripe Element will be inserted here. -->
                </div>

                <!-- Used to display Element errors. -->
                <div id="card-errors" role="alert"></div>

            <button>Envoyer le paiment</button>
        </form>
    {% else %}
        <div class="container container-fluid mt-5">
            <p><i class="far fa-sad-tear"></i> Vôtre panier est vide !</p>
            <p><i class="fas fa-shopping-basket"></i> <a href="{{ path('outfits_index') }}"> Remplisez le ici !</a></p>
        </div>
    {% endif %}
{% endblock %}

{% block javascripts %}
    <script>
        const stripe = Stripe('pk_test_TYooMQauvdEDq54NiTphI7jx');
        const elements = stripe.elements();

        // Custom styling can be passed to options when creating an Element.
        const style = {
            base: {
                // Add your base input styles here. For example:
                fontSize: '32px',
                color: 'black',
                hidePostalCode: 'false',
            },
        };

        // Create an instance of the card Element.
        const card = elements.create('card', {style});

        // Add an instance of the card Element into the `card-element` <div>.
        card.mount('#card-element');

        const form = document.getElementById('payment-form');
        form.addEventListener('submit', async (event) => {
            event.preventDefault();

            const {token, error} = await stripe.createToken(card);

            if (error) {
                // Inform the customer that there was an error.
                const errorElement = document.getElementById('card-errors');
                errorElement.textContent = error.message;
            } else {
                // Send the token to your server.
                stripeTokenHandler(token);
            }
        });
        const stripeTokenHandler = (token) => {
            // Insert the token ID into the form so it gets submitted to the server
            const form = document.getElementById('payment-form');
            const hiddenInput = document.createElement('input');
            hiddenInput.setAttribute('type', 'hidden');
            hiddenInput.setAttribute('name', 'stripeToken');
            hiddenInput.setAttribute('value', token.id);
            form.appendChild(hiddenInput);

            // Submit the form
            form.submit();
        }
    </script>
{% endblock %}
